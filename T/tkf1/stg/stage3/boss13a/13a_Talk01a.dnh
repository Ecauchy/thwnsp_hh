//#����e����[Single]
#ScriptVersion[3]
#Title["3��1��ځ@��bA"]
#Text["3��1��ځ@��bA"]
#Background[""]
#System["./../../../system/System_Main.dnh"]

//---------------------------------------------------------------------

// �֐���荞��
#include"./../../../lib/lib_boss.dnh"
#include"./../../../lib/lib_talk.dnh"


@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}
	BossEvent();
}

@Initialize {
	Boss_Init();	//����ݒ�
	objEnemy  = CreateBossTalk(BOSS_ID_RAKU);
	Task_Main();
}

@MainLoop {
	yield;

}

// ���C���^�X�N
task Task_Main()
{
	// ���@�w���Z�b�g
	BossEffect_ResetMagicCircle();

	// ��b����
	StartTalk();

	// �o�ꃂ�[�V����
	let xIni = CenX;
	let yIni = 140;
	EnterBoss(objEnemy, xIni, yIni);
	wait(60);
	
	FuncTalk();
	
	//���̃V�[����
	FinishTalk(true);
	Boss_Finalize(objEnemy, false, false);
}

// ��b����
function FuncTalk()
{
	// �I�u�W�F�N�g�쐬
	let cutinBoss1   = CreateTalkObject(BOSS_ID_RAKU, true);
	let cutinPlayer1 = CreateTalkObject(BOSS_ID_REIMU, false);
	let cutinPlayer2 = CreateTalkObject(BOSS_ID_TOKUBI, false);
	
	// �摜�t�@�C��
	let pathBoss1 = imgCharaRaku;
	let pathPlayer1 = imgCharaReimu;
	let pathPlayer2 = imgCharaTokubi;
	
	// �ŏ��ɑO�ɏo�Ă���L����
	SetImageFoward(pathBoss1, true);
	
	wait(15);
	
	let talkID = 0;
	loop
	{
		let talkType = FuncTalkSingle(talkID);
		if (talkType == 0) { break; }
		talkID++;
		WaitNext();
	}

	// ��b�����P���i�����߂����o����悤�Ɂj
	function FuncTalkSingle(talkID)
	{
		let xIni = CenX;
		let yIni = 140;
		
		let talk_type = 1;
		alternative(talkID)
		case(0)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinBoss1, "ラクククク、これはこれは、[r]霊夢さんではございませんか。");
			SetBossName(cutinBoss1, 280, 220);	// �{�X�l�[���\��
		}
		case(1)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinBoss1, "先ほどの有り難い白の槌の子様[r]といい、本日はここら辺が慌しい");
		}
		case(2)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[6]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer1, "悪いけど、取材に付き合ってる暇は無いの！");
		}
		case(3)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[6]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "異変の犯人がすぐそこに居るというのに！");
		}
		case(4)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[6]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "まあ、そう慌てずに。");
		}
		case(5)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[6]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "まずは幻想郷最速の真森羅苦楽乱神紙の[r]号外でもご覧下さいませ");
		}
		case(6)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[6]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer1, "だから、構ってる暇は…");
		}
		case(7)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[4]);
			SetTalkEx(cutinPlayer2, "霊夢殿！！これは！");
		}
		case(8)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[4]);
			SetTalkEx(cutinPlayer1, "なになに？異変収束！？[r]そんな馬鹿な！？");
			SetFukidashiType(cutinPlayer1, FUKIDASHI_ANGER);
		}
		case(9)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[4]);
			SetTalkEx(cutinBoss1, "ではでは");
		}
		case(10)
		{
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[4]);
			SetTalkEx(cutinBoss1, "異変解決に一歩遅れた博麗の巫女殿に[r]取材開始でございます。ラクククク");
		}
		others
		{
			return(0);
		}
		return(talk_type);
	}
}
task EnterBoss(objEnemy, xIni, yIni)
{
	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }
	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	SetMovePositionHermite(objEnemy, xIni+64, yIni-32,
		600, 45, 0, 0, 50);
	SetAction(objEnemy, ACT_MOVE_R, 50);
	wait(60);
	SetMovePositionHermite(objEnemy, xIni, yIni,
		0, 0, 0, 0, 30);
	SetAction(objEnemy, ACT_MOVE_L, 30);
	wait(30);
}
