//#東方弾幕風[Single]
#ScriptVersion[3]
#Title["3面1周目　会話A"]
#Text["3面1周目　会話A"]
#Background[""]
#System["./../../../system/System_Main.dnh"]

//---------------------------------------------------------------------

// 関数取り込み
#include"./../../../lib/lib_boss.dnh"
#include"./../../../lib/lib_talk.dnh"


@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}
	BossEvent();
}

@Initialize {
	Boss_Init();	//初期設定
	objEnemy  = CreateBossTalk(BOSS_ID_TOKUBI);
	Task_Main();
}

@MainLoop {
	yield;

}

// メインタスク
task Task_Main()
{
	// 魔法陣リセット
	BossEffect_ResetMagicCircle();

	// 会話準備
	StartTalk();

	// 登場モーション（最初は非表示）
	wait(60);
	
	FuncTalk();
	
	//次のシーンへ
	FinishTalk(true);
	Boss_Finalize(objEnemy, false, false);
}

// 会話処理
function FuncTalk()
{
	// オブジェクト作成
	let cutinBoss1   = CreateTalkObject(BOSS_ID_TOKUBI, true);
	let cutinPlayer1 = CreateTalkObject(BOSS_ID_MARISA, false);
	let cutinPlayer2 = CreateTalkObject(BOSS_ID_RINNE, false);
	
	// 画像ファイル
	let pathBoss1 = imgCharaTokubi;
	let pathPlayer1 = imgCharaMarisa;
	let pathPlayer2 = imgCharaRinne;
	
	// 隠す
	SetImageVisible(cutinBoss1, false);
	// 最初に前に出てくるキャラ
	SetImageFoward(cutinPlayer1, true);
	
	wait(15);
	
	let talkID = 0;
	loop
	{
		let talkType = FuncTalkSingle(talkID);
		if (talkType == 0) { break; }
		talkID = max(0, talkID+WaitNext());
	}

	// 会話処理単発（巻き戻しも出来るように）
	function FuncTalkSingle(talkID)
	{
		let xIni = CenX;
		let yIni = 140;
		
		let talk_type = 1;
		alternative(talkID)
		case(0)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer1, "いよいよ黒幕の登場か？");
		}
		case(1)
		{
			SetImageVisible(cutinBoss1, false);	// ボス画像出現フラグ
			
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);
			SetTalkEx(cutinPlayer2, "ええ、さあ、諸悪の根源のお出ましですよ");
		}
		case(2)
		{
			EnterBoss(objEnemy, xIni, yIni);
			BossScene_SetNameVisible(objScene, true);	//ボスネーム表示状態
			SetImageVisible(cutinBoss1, true);	// ボス画像出現フラグ

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);
			SetTalkEx(cutinBoss1, "どの口がほざくか！白菊！");
			SetFukidashiType(cutinBoss1, FUKIDASHI_ANGER);
			SetBossName(cutinBoss1, 280, 220);	// ボスネーム表示
		}
		case(3)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);
			SetTalkEx(cutinBoss1, "先日記憶を司る神などという奴から[r]襲撃を受けたが、今度はお前か！");
		}
		case(4)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);
			SetTalkEx(cutinPlayer1, "本当に今回の異変は面倒な事になってるな");
		}
		case(5)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[5]);
			SetTalkEx(cutinPlayer2, "襲撃を受けたって、まさか負けたんですか？");
		}
		case(6)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[4]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[5]);
			SetTalkEx(cutinBoss1, "相手も忘れの異変の最中で力が[r]上がっていたのであろうな。不覚にも");
		}
		case(7)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[4]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);
			SetTalkEx(cutinPlayer2, "あはは、愛宕軍の筆頭書記官も[r]落ちぶれたものですね");
		}
		case(8)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[3]);
			SetTalkEx(cutinBoss1, "して、何故また私はお前らに[r]襲われねばならん？");
		}
		case(9)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer2, "今回の異変、貴方が自分の理論の正しさを証明[r]する為の実験材料として起こしたんでしょう？");
		}
		case(10)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer1, "理論とか実験って何だ？記憶操作術か？");
		}
		case(11)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer2, "まあ、そんな所です");
		}
		case(12)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinBoss1, "お前ら不貞の輩に説明する義理は無い！");
		}
		case(13)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinBoss1, "しかしまあ、折角ノコノコとやって来て[r]くれたのだ。私の実験材料にしてやろう");
		}
		case(14)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "このマッドサイエンティストめ！");
		}
		case(15)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "あやしい実験を今すぐ止めさせ、[r]幻想郷の平和を守るのです！");
		}
		case(16)
		{
			//  BGM
			PlayMusicWithName( 7, true, 30 );

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "幻想郷という外から観測する[r]事のできない密室の箱。");
		}
		case(17)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "私は、貴様らの敗北する未来に[r]可能性を収束させる観測者となる！");
		}
		others
		{
			return(0);
		}
		return(talk_type);
	}
}

task EnterBoss(objEnemy, xIni, yIni)
{
	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }
	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	SetMovePositionHermite(objEnemy, xIni, yIni,
		1000, 120, 0, 180, 90);
	SetAction(objEnemy, ACT_MOVE_L, 90);
}
