//#����e����[Single]
#ScriptVersion[3]
#Title["3��1��ځ@��bA"]
#Text["3��1��ځ@��bA"]
#Background[""]
#System["./../../../system/System_Main.dnh"]

//---------------------------------------------------------------------

// �֐���荞��
#include"./../../../lib/lib_boss.dnh"
#include"./../../../lib/lib_talk.dnh"


@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}
	BossEvent();
}

@Initialize {
	Boss_Init();	//����ݒ�
	objEnemy  = CreateBossTalk(BOSS_ID_MINAYU);
	Task_Main();
}

@MainLoop {
	yield;

}

// ���C���^�X�N
task Task_Main()
{
	// ���@�w���Z�b�g
	BossEffect_ResetMagicCircle();

	// ��b����
	StartTalk();

	// �o�ꃂ�[�V�����i�ŏ��͔�\���j
	wait(60);
	
	FuncTalk();
	
	//���̃V�[����
	FinishTalk(true);
	Boss_Finalize(objEnemy, false, false);
}

// ��b����
function FuncTalk()
{
	// �I�u�W�F�N�g�쐬
	let cutinBoss1   = CreateTalkObject(BOSS_ID_MINAYU, true);
	let cutinPlayer1 = CreateTalkObject(BOSS_ID_REIMU, false);
	let cutinPlayer2 = CreateTalkObject(BOSS_ID_TOKUBI, false);
	
	// �摜�t�@�C��
	let pathBoss1 = imgCharaMinayu;
	let pathPlayer1 = imgCharaReimu;
	let pathPlayer2 = imgCharaTokubi;
	
	// �B��
	SetImageVisible(cutinBoss1, false);
	// �ŏ��ɑO�ɏo�Ă���L����
	SetImageFoward(cutinPlayer2, true);
	
	wait(15);
	
	let talkID = 0;
	loop
	{
		let talkType = FuncTalkSingle(talkID);
		if (talkType == 0) { break; }
		talkID = max(0, talkID+WaitNext());
	}

	// ��b�����P���i�����߂����o����悤�Ɂj
	function FuncTalkSingle(talkID)
	{
		let xIni = CenX;
		let yIni = 140;
		
		let talk_type = 1;
		alternative(talkID)
		case(0)
		{
			SetImageVisible(cutinBoss1, false);	// �{�X�摜�o���t���O
			
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "那么，终于走到这一步了呢！[r]现身吧！");
		}
		case(1)
		{
			EnterBoss(objEnemy, xIni, yIni);
			BossScene_SetNameVisible(objScene, true);	//�{�X�l�[���\�����
			SetImageVisible(cutinBoss1, true);	// �{�X�摜�o���t���O

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "噢呀，我还以为是谁呢。");
			SetBossName(cutinBoss1, 280, 220);	// �{�X�l�[���\��
		}
		case(2)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "明明之前把你当成异变的犯人教训了一顿，[r]丝毫不见悔改呢。");
		}
		case(3)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer1, "原来如此，你就是袭击犯啊。");
		}
		case(4)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer2, "简而言之，你不是掌管记忆的神吗？");
		}
		case(5)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer2, "为了增加自己的信仰，[r]自己引发了这场异变，不是吗？");
		}
		case(6)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinBoss1, "什么啊，忘却这种事情变得这么容易做到了，[r]我自己正苦恼着！");
		}
		case(7)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[5]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinBoss1, "真是的，我明明光在寻找自我的旅途上，[r]都忙得不可开交了！");
		}
		case(8)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[5]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer1, "虽然不太明白，只要把这家伙打倒后[r]异变消失了的话，这家伙就是犯人，是这样吧？");
		}
		case(9)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[5]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "是的，灵梦殿下。是否清白，[r]只能用力量来证明！");
		}
		case(10)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[5]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "之后就能回到之前那种，可以沉浸在实验中的和平的日子了，[r]不是吗？");
		}
		case(11)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "我的记忆，[r]在很久很久以前，不知被搁在何处……");
		}
		case(12)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "现在我要把你们打倒，[r]新たなる記憶のページを上書きするわ！");
		}
		case(13)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer1, "その記憶は白紙のままに[r]葬り去ってくれるわよ！");
		}
		case(14)
		{
			//  BGM
			PlayMusicWithName( 7, true, 30 );

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "记忆化为瓦砾化为尘土，[r]众人皆化为故人。");
		}
		case(15)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[3]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "享受这忘却一切的快乐吧！");
		}
		case(16)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[3]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer1, "这怎么听都是犯人的台词才对吧！");
		}
		others
		{
			return(0);
		}
		return(talk_type);
	}
}

task EnterBoss(objEnemy, xIni, yIni)
{
	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }
	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	SetMovePositionHermite(objEnemy, xIni, yIni,
		1000, 65, 0, 180, 105);
	SetAction(objEnemy, ACT_MOVE_R, 105);
}
