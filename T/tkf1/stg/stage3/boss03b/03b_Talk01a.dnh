//#����e����[Single]
#ScriptVersion[3]
#Title["3��1��ځ@��bA"]
#Text["3��1��ځ@��bA"]
#Background[""]
#System["./../../../system/System_Main.dnh"]

//---------------------------------------------------------------------

// �֐���荞��
#include"./../../../lib/lib_boss.dnh"
#include"./../../../lib/lib_talk.dnh"


@Event {
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)		{ SetScriptResult( 0);	}
	case(EV_REQUEST_TIMER)		{ SetScriptResult(-1);	}
	BossEvent();
}

@Initialize {
	Boss_Init();	//����ݒ�
	objEnemy  = CreateBossTalk(BOSS_ID_MINAYU);
	Task_Main();
}

@MainLoop {
	yield;

}

// ���C���^�X�N
task Task_Main()
{
	// ���@�w���Z�b�g
	BossEffect_ResetMagicCircle();

	// ��b����
	StartTalk();

	// �o�ꃂ�[�V�����i�ŏ��͔�\���j
	wait(60);
	
	FuncTalk();
	
	//���̃V�[����
	FinishTalk(true);
	Boss_Finalize(objEnemy, false, false);
}

// ��b����
function FuncTalk()
{
	// �I�u�W�F�N�g�쐬
	let cutinBoss1   = CreateTalkObject(BOSS_ID_MINAYU, true);
	let cutinPlayer1 = CreateTalkObject(BOSS_ID_REIMU, false);
	let cutinPlayer2 = CreateTalkObject(BOSS_ID_TOKUBI, false);
	
	// �摜�t�@�C��
	let pathBoss1 = imgCharaMinayu;
	let pathPlayer1 = imgCharaReimu;
	let pathPlayer2 = imgCharaTokubi;
	
	// �B��
	SetImageVisible(cutinBoss1, false);
	// �ŏ��ɑO�ɏo�Ă���L����
	SetImageFoward(cutinPlayer2, true);
	
	wait(15);
	
	let talkID = 0;
	loop
	{
		let talkType = FuncTalkSingle(talkID);
		if (talkType == 0) { break; }
		talkID = max(0, talkID+WaitNext());
	}

	// ��b�����P���i�����߂����o����悤�Ɂj
	function FuncTalkSingle(talkID)
	{
		let xIni = CenX;
		let yIni = 140;
		
		let talk_type = 1;
		alternative(talkID)
		case(0)
		{
			SetImageVisible(cutinBoss1, false);	// �{�X�摜�o���t���O
			
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "さあ、ついにここまで来たぞ！[r]姿を現せ！");
		}
		case(1)
		{
			EnterBoss(objEnemy, xIni, yIni);
			BossScene_SetNameVisible(objScene, true);	//�{�X�l�[���\�����
			SetImageVisible(cutinBoss1, true);	// �{�X�摜�o���t���O

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "おや、誰かと思えば。");
			SetBossName(cutinBoss1, 280, 220);	// �{�X�l�[���\��
		}
		case(2)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[2]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "先日貴方を異変の犯人として成敗[r]したのに性懲りもなく");
		}
		case(3)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer1, "なるほど、あんたが襲撃犯って訳ね");
		}
		case(4)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer2, "だいたいお前は記憶を司る神だろう？");
		}
		case(5)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer2, "自らの 信仰を上げる為に自分で[r]起こしたのではないか？");
		}
		case(6)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinBoss1, "私だって、忘れるという事をこんな[r]安易に使われて迷惑している所です！");
		}
		case(7)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[5]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinBoss1, "まったく、私は自分探しの旅[r]で忙しいというのに！");
		}
		case(8)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[5]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[2]);
			SetTalkEx(cutinPlayer1, "よくわかんないけど、こいつ倒して[r]解決すればこいつが犯人って事ね？");
		}
		case(9)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[5]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "そうだ、霊夢殿。身の潔白は力で[r]証明するしかない！");
		}
		case(10)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[5]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer2, "そして再び実験に没頭できる平和な[r]日々を取り戻そうではないか");
		}
		case(11)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "私の記憶は遥か昔に[r]どこかに置いてきてしまった…");
		}
		case(12)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[4]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "今私は貴方達を倒して、[r]新たなる記憶のページを上書きするわ！");
		}
		case(13)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[6]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer1, "その記憶は白紙のままに[r]葬り去ってくれるわよ！");
		}
		case(14)
		{
			//  BGM
			PlayMusicWithName( 7, true, 30 );

			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[2]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "記憶は瓦礫となりて塵となりて、[r]皆々全てが故となる。");
		}
		case(15)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[3]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[3]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinBoss1, "全てを忘れ楽になるがいい！");
		}
		case(16)
		{
			ObjPrim_SetTexture(cutinBoss1,     pathBoss1[3]);
			ObjPrim_SetTexture(cutinPlayer1, pathPlayer1[5]);
			ObjPrim_SetTexture(cutinPlayer2, pathPlayer2[6]);
			SetTalkEx(cutinPlayer1, "それどう聞いても犯人の台詞でしょ");
		}
		others
		{
			return(0);
		}
		return(talk_type);
	}
}

task EnterBoss(objEnemy, xIni, yIni)
{
	if (Obj_GetValueD(objEnemy, "BOSS_MOVED", false)) { return; }
	Obj_SetValue(objEnemy, "BOSS_MOVED", true);

	SetMovePositionHermite(objEnemy, xIni, yIni,
		1000, 65, 0, 180, 105);
	SetAction(objEnemy, ACT_MOVE_R, 105);
}
